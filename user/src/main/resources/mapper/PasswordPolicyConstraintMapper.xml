<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accumulate.mapper.PasswordPolicyConstraintMapper">
  <resultMap id="BaseResultMap" type="com.accumulate.entity.PasswordPolicyConstraint">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="min" jdbcType="TINYINT" property="min" />
    <result column="max" jdbcType="TINYINT" property="max" />
    <result column="max_repeat_character" jdbcType="TINYINT" property="maxRepeatCharacter" />
    <result column="min_non_alphanumeric" jdbcType="TINYINT" property="minNonAlphanumeric" />
    <result column="min_digits" jdbcType="TINYINT" property="minDigits" />
    <result column="min_lowercase" jdbcType="TINYINT" property="minLowercase" />
    <result column="min_uppercase" jdbcType="TINYINT" property="minUppercase" />
    <result column="not_blank" jdbcType="BIT" property="notBlank" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    id, enable, min, max, max_repeat_character, min_non_alphanumeric, min_digits, min_lowercase, 
    min_uppercase, not_blank
  </sql>
  <select id="selectByExample" parameterType="com.accumulate.entity.PasswordPolicyConstraintExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from acc_password_policy_constraint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from acc_password_policy_constraint
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    delete from acc_password_policy_constraint
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accumulate.entity.PasswordPolicyConstraintExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    delete from acc_password_policy_constraint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accumulate.entity.PasswordPolicyConstraint">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    insert into acc_password_policy_constraint (id, enable, min, 
      max, max_repeat_character, min_non_alphanumeric, 
      min_digits, min_lowercase, min_uppercase, 
      not_blank)
    values (#{id,jdbcType=INTEGER}, #{enable,jdbcType=BIT}, #{min,jdbcType=TINYINT}, 
      #{max,jdbcType=TINYINT}, #{maxRepeatCharacter,jdbcType=TINYINT}, #{minNonAlphanumeric,jdbcType=TINYINT}, 
      #{minDigits,jdbcType=TINYINT}, #{minLowercase,jdbcType=TINYINT}, #{minUppercase,jdbcType=TINYINT}, 
      #{notBlank,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.accumulate.entity.PasswordPolicyConstraint">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    insert into acc_password_policy_constraint
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="min != null">
        min,
      </if>
      <if test="max != null">
        max,
      </if>
      <if test="maxRepeatCharacter != null">
        max_repeat_character,
      </if>
      <if test="minNonAlphanumeric != null">
        min_non_alphanumeric,
      </if>
      <if test="minDigits != null">
        min_digits,
      </if>
      <if test="minLowercase != null">
        min_lowercase,
      </if>
      <if test="minUppercase != null">
        min_uppercase,
      </if>
      <if test="notBlank != null">
        not_blank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="min != null">
        #{min,jdbcType=TINYINT},
      </if>
      <if test="max != null">
        #{max,jdbcType=TINYINT},
      </if>
      <if test="maxRepeatCharacter != null">
        #{maxRepeatCharacter,jdbcType=TINYINT},
      </if>
      <if test="minNonAlphanumeric != null">
        #{minNonAlphanumeric,jdbcType=TINYINT},
      </if>
      <if test="minDigits != null">
        #{minDigits,jdbcType=TINYINT},
      </if>
      <if test="minLowercase != null">
        #{minLowercase,jdbcType=TINYINT},
      </if>
      <if test="minUppercase != null">
        #{minUppercase,jdbcType=TINYINT},
      </if>
      <if test="notBlank != null">
        #{notBlank,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accumulate.entity.PasswordPolicyConstraintExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    select count(*) from acc_password_policy_constraint
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    update acc_password_policy_constraint
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.min != null">
        min = #{record.min,jdbcType=TINYINT},
      </if>
      <if test="record.max != null">
        max = #{record.max,jdbcType=TINYINT},
      </if>
      <if test="record.maxRepeatCharacter != null">
        max_repeat_character = #{record.maxRepeatCharacter,jdbcType=TINYINT},
      </if>
      <if test="record.minNonAlphanumeric != null">
        min_non_alphanumeric = #{record.minNonAlphanumeric,jdbcType=TINYINT},
      </if>
      <if test="record.minDigits != null">
        min_digits = #{record.minDigits,jdbcType=TINYINT},
      </if>
      <if test="record.minLowercase != null">
        min_lowercase = #{record.minLowercase,jdbcType=TINYINT},
      </if>
      <if test="record.minUppercase != null">
        min_uppercase = #{record.minUppercase,jdbcType=TINYINT},
      </if>
      <if test="record.notBlank != null">
        not_blank = #{record.notBlank,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    update acc_password_policy_constraint
    set id = #{record.id,jdbcType=INTEGER},
      enable = #{record.enable,jdbcType=BIT},
      min = #{record.min,jdbcType=TINYINT},
      max = #{record.max,jdbcType=TINYINT},
      max_repeat_character = #{record.maxRepeatCharacter,jdbcType=TINYINT},
      min_non_alphanumeric = #{record.minNonAlphanumeric,jdbcType=TINYINT},
      min_digits = #{record.minDigits,jdbcType=TINYINT},
      min_lowercase = #{record.minLowercase,jdbcType=TINYINT},
      min_uppercase = #{record.minUppercase,jdbcType=TINYINT},
      not_blank = #{record.notBlank,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accumulate.entity.PasswordPolicyConstraint">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    update acc_password_policy_constraint
    <set>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="min != null">
        min = #{min,jdbcType=TINYINT},
      </if>
      <if test="max != null">
        max = #{max,jdbcType=TINYINT},
      </if>
      <if test="maxRepeatCharacter != null">
        max_repeat_character = #{maxRepeatCharacter,jdbcType=TINYINT},
      </if>
      <if test="minNonAlphanumeric != null">
        min_non_alphanumeric = #{minNonAlphanumeric,jdbcType=TINYINT},
      </if>
      <if test="minDigits != null">
        min_digits = #{minDigits,jdbcType=TINYINT},
      </if>
      <if test="minLowercase != null">
        min_lowercase = #{minLowercase,jdbcType=TINYINT},
      </if>
      <if test="minUppercase != null">
        min_uppercase = #{minUppercase,jdbcType=TINYINT},
      </if>
      <if test="notBlank != null">
        not_blank = #{notBlank,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accumulate.entity.PasswordPolicyConstraint">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jan 05 16:45:06 CST 2017.
    -->
    update acc_password_policy_constraint
    set enable = #{enable,jdbcType=BIT},
      min = #{min,jdbcType=TINYINT},
      max = #{max,jdbcType=TINYINT},
      max_repeat_character = #{maxRepeatCharacter,jdbcType=TINYINT},
      min_non_alphanumeric = #{minNonAlphanumeric,jdbcType=TINYINT},
      min_digits = #{minDigits,jdbcType=TINYINT},
      min_lowercase = #{minLowercase,jdbcType=TINYINT},
      min_uppercase = #{minUppercase,jdbcType=TINYINT},
      not_blank = #{notBlank,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>